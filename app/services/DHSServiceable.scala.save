package services

import java.sql.{Connection, DriverManager, ResultSet, SQLException}
import data.mssql.MsSql

trait DHSServiceable{

  def executeQuery(conn: Connection, query: String): (IndexedSeq[String], Iterator[IndexedSeq[String]]) = {
    var rs: ResultSet = null

    try {
      rs = conn.createStatement.executeQuery(query)
    } catch {
      case ex: SQLException => {
          throw ex
      }
    }

    val columnCnt: Int = rs.getMetaData.getColumnCount
    val columns: IndexedSeq[String] = 1 to columnCnt map rs.getMetaData.getColumnName
    val results: Iterator[IndexedSeq[String]] = Iterator.continually(rs).takeWhile(_.next()).map{ rs =>
      columns map rs.getString
    }
    (columns, results)
  }
}